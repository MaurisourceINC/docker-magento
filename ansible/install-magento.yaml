- name: Install Magento 
  hosts: server
  become: yes
  gather_facts: false

  tasks:
    - name: Populate Apt's Cache with package definitions to avoid "no such package" errors
      apt:
        update_cache: true

    - name: Create a Composer dir
      file:
        path: ~/.composer
        state: directory
        # mode: '0755'

    - name: Create a Composer dir
      file:
        path: ~/.ssh
        state: directory
        # mode: '0755'

    - name: Create a magento
      file:
        path: ./magento
        state: directory
        mode: '0755'

    - name: Run command to print working directory
      command: pwd 
      args:
        chdir: ./magento 
      register: pwd_output
      no_log: false

    - name: Print working directory
      debug:
        msg: "Working directory: {{ pwd_output.stdout }}"
      no_log: false

    # - name: Change to the newly created directory and perform actions
    #   command: |
    #     echo "Now in the directory"
    #   args:
    #     chdir: ./magento



    - name: Copy the Docker Compose template
      copy:
        src: ../compose
        dest: '{{ pwd_output.stdout }}'

    - name: Run command to print working directory
      file:
        path: '{{ pwd_output.stdout }}/compose/bin'
        state: directory
        mode: '0755'

    - name: Run command to print working directory
      shell: bin/download 2.4.7 community 
      become: yes
      args:
        chdir: '{{ pwd_output.stdout }}/compose'


    - name: Run command to print working directory
      shell: bin/setup aws.onedev.one # Use 'shell' instead of 'command' if you're on a shell that supports it
      become: yes
      args:
        chdir: '{{ pwd_output.stdout }}/compose'